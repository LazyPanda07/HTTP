name: CI

on:
  push:
    branches: [master, dev]


jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, DebugDLL, Release, ReleaseDLL, ProductionRelease, ProductionReleaseDLL]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@main
      
    - name: Build
      run: msbuild /p:Configuration=${{ matrix.configuration }} /p:Platform=x64 HTTP.sln

    - name: Copy JSON to HTTP
      run: Copy-Item -Path .\bin\${{ matrix.configuration }}-x64\JSON\* -Destination .\bin\${{ matrix.configuration }}-x64\HTTP\ -Force

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}_Windows
        path: bin/${{ matrix.configuration }}-x64/HTTP

  linux-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, DebugDLL, Release, ReleaseDLL, ProductionRelease, ProductionReleaseDLL]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup build type
      shell: pwsh
      run: echo "BUILD_TYPE=$(if ("${{ matrix.configuration }}".Contains("Release")) { echo "Release" } else { echo "Debug" })" >> $Env:GITHUB_ENV

    - name: Get vs_to_cmake
      uses: actions/checkout@v4
      with:
        repository: LazyPanda07/vs_to_cmake
        ref: dev
        path: vs_to_cmake

    - name: Install vs_to_cmake
      run: pip install vs_to_cmake/

    - name: Generate HTTP CMakeLists.txt
      run: vs_to_cmake -f HTTP.vcxproj -d __LINUX__

    - name: Generate JSON CMakeLists.txt
      run: |
          cd JSON
          vs_to_cmake -f JSON.vcxproj -d __LINUX__

    - name: Build
      run: |
          mkdir build
          cd build
          cmake -DVS_BUILD_CONFIGURATION=${{ matrix.configuration }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ..
          make install -j $(nproc)

    - name: Copy JSON to HTTP
      run: cp bin/${{ matrix.configuration }}-x64/JSON/* bin/${{ matrix.configuration }}-x64/HTTP/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration }}_Linux
        path: bin/${{ matrix.configuration }}-x64/HTTP
